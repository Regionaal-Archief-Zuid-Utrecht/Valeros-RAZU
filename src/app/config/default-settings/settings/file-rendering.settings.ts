import { FileType } from '../../../models/file-type.model';
import { FileViewer } from '../../../models/file-viewer.enum';
import { FileRenderingSettings } from '../../../models/settings/file-rendering.settings.model';

export const fileRenderingSettings: FileRenderingSettings = {
  preferredViewerOrder: [
    FileViewer.Image, // Mirador
    FileViewer.Doc, // PDF.js
    FileViewer.Link,
  ] as FileViewer[], // If a node refers to multiple files with different file types (e.g., two images and a doc), we can not show both the image and the doc renderers. Instead, choose a preferred viewer based on the order defined here (e.g., prefer rendering the images over rendering the doc).
  fileTypes: {
    [FileType.WEB_IMAGE]: {
      // Files that are images, and can be directly rendered in the browser
      extensions: ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'svg', 'webp'],
      iconUrl: '/assets/img/file-types/image.png',
    },
    [FileType.NON_WEB_IMAGE]: {
      // Files that are images, but can not be rendered in the browser
      extensions: ['tif', 'tiff'],
      iconUrl: '/assets/img/file-types/image.png',
    },
    [FileType.PDF]: {
      extensions: ['pdf'],
      iconUrl: '/assets/img/file-types/pdf.png',
    },
    [FileType.DOC]: {
      extensions: [
        'doc',
        'docx',
        'docm',
        'dot',
        'dotx',
        'dotm',
        'odt',
        'rtf',
        'txt',
      ],
      iconUrl: '/assets/img/file-types/doc.png',
    },
    [FileType.XLS]: {
      extensions: [
        'xls',
        'xlsx',
        'xlsm',
        'xlsb',
        'xlt',
        'xltx',
        'xltm',
        'ods',
        'csv',
      ],
      iconUrl: '/assets/img/file-types/xls.png',
    },
    [FileType.PPT]: {
      extensions: ['ppt', 'pptx', 'pptm', 'pot', 'potx', 'potm', 'odp'],
      iconUrl: '/assets/img/file-types/ppt.png',
    },
    [FileType.OTHER_VIEWABLE_FILE]: {
      extensions: [
        '123',
        '602',
        'abw',
        'bib',
        'cdr',
        'cgm',
        'cmx',
        'cwk',
        'dbf',
        'dif',
        'dxf',
        'emf',
        'eps',
        'epub',
        'fodg',
        'fodp',
        'fods',
        'fodt',
        'fopd',
        'htm',
        'html',
        'hwp',
        'key',
        'ltx',
        'lwp',
        'mcw',
        'met',
        'mml',
        'mw',
        'numbers',
        'odd',
        'odg',
        'odm',
        'otg',
        'oth',
        'otp',
        'ots',
        'ott',
        'pages',
        'pbm',
        'pcd',
        'pct',
        'pcx',
        'pdb',
        'pgm',
        'ppm',
        'psd',
        'psw',
        'pub',
        'pwp',
        'pxl',
        'ras',
        'sda',
        'sdc',
        'sdd',
        'sdp',
        'sdw',
        'sgl',
        'slk',
        'smf',
        'stc',
        'std',
        'sti',
        'stw',
        'svm',
        'swf',
        'sxc',
        'sxd',
        'sxg',
        'sxi',
        'sxm',
        'sxw',
        'tga',
        'uof',
        'uop',
        'uos',
        'uot',
        'vdx',
        'vor',
        'vsd',
        'vsdm',
        'vsdx',
        'wb2',
        'wk1',
        'wks',
        'wmf',
        'wpd',
        'wpg',
        'wps',
        'xbm',
        'xhtml',
        'xlt',
        'xltm',
        'xltx',
        'xlw',
        'xml',
        'xpm',
        'zabw',
      ],
      iconUrl: '/assets/img/file-types/file.png',
    },
    [FileType.UNKNOWN]: {
      extensions: [],
      iconUrl: '/assets/img/file-types/file.png',
    },
  },
};
